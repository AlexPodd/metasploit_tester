package ciinterface

import (
	"fmt"
	"strings"

	"github.com/AlexPodd/metasploit_tester_console/internal/domain"
	tea "github.com/charmbracelet/bubbletea"
	"github.com/charmbracelet/lipgloss"
)

var (
	fieldStyle = lipgloss.NewStyle().
		Foreground(lipgloss.Color("#04B575"))
)

type ExploitInfoModel struct {
	exploit domain.Exploit
	app     *App
}

func NewExploitInfoModel(exploit domain.Exploit, app *App) *ExploitInfoModel {
	return &ExploitInfoModel{
		exploit: exploit,
		app:     app,
	}
}

func (m *ExploitInfoModel) Init() tea.Cmd {
	return nil
}

func (m *ExploitInfoModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.KeyMsg:
		switch msg.String() {
		case "esc", "q":
			return m.app.chosePage, nil
		}
	}
	return m, nil
}

func (m *ExploitInfoModel) View() string {
	var sb strings.Builder

	title := fmt.Sprintf(" ИНФОРМАЦИЯ ОБ ЭКСПЛОИТЕ: %s ", m.exploit.Name)
	sb.WriteString(titleStyle.Render(title) + "\n\n")

	sb.WriteString(fmt.Sprintf("%s: %s\n", fieldStyle.Render("Название"), m.exploit.Name))
	sb.WriteString(fmt.Sprintf("%s: %s\n", fieldStyle.Render("Описание"), m.exploit.Description()))
	sb.WriteString(fmt.Sprintf("%s: %s\n", fieldStyle.Render("Платформа"), m.exploit.Platform))
	sb.WriteString(fmt.Sprintf("%s: %s\n", fieldStyle.Render("Путь"), m.exploit.Path))

	if len(m.exploit.Authors) > 0 {
		sb.WriteString(fmt.Sprintf("%s: %s\n", fieldStyle.Render("Авторы"), strings.Join(m.exploit.Authors, ", ")))
	}

	// Цели
	if len(m.exploit.Targets) > 0 {
		sb.WriteString(fmt.Sprintf("%s: %s\n", fieldStyle.Render("Таргеты"), strings.Join(m.exploit.Targets, ", ")))
	}

	// Ссылки
	if len(m.exploit.References) > 0 {
		sb.WriteString(fmt.Sprintf("%s: %s\n", fieldStyle.Render("Референсы"), strings.Join(m.exploit.References, ", ")))
	}

	sb.WriteString("\n" + helpStyleConfig.Render("esc/q - назад"))

	return appStyle.Render(sb.String())
}
